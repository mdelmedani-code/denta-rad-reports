version: '3.8'

services:
  # PostgreSQL Database for Orthanc metadata
  postgres:
    image: postgres:15-alpine
    container_name: orthanc-postgres
    environment:
      POSTGRES_DB: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - orthanc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orthanc"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Orthanc DICOM Server with DICOMweb
  orthanc:
    image: orthancteam/orthanc:latest
    container_name: orthanc-server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ORTHANC_NAME: "DentaRad PACS"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ORTHANC_USERNAME: ${ORTHANC_USERNAME}
      ORTHANC_PASSWORD: ${ORTHANC_PASSWORD}
    volumes:
      - orthanc_data:/var/lib/orthanc/db
      - ./orthanc-config:/etc/orthanc:ro
      - ./ssl:/etc/ssl/orthanc:ro
    ports:
      - "8042:8042"  # HTTP port
      - "4242:4242"  # DICOM port
    networks:
      - orthanc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8042/system"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: orthanc-nginx
    depends_on:
      orthanc:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - certbot_www:/var/www/certbot:ro
      - certbot_conf:/etc/letsencrypt:ro
    networks:
      - orthanc-network
    restart: unless-stopped

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: orthanc-certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}
    networks:
      - orthanc-network

  # Backup service
  backup:
    image: postgres:15-alpine
    container_name: orthanc-backup
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - orthanc_data:/data/orthanc:ro
      - backup_data:/backup
      - ./scripts/backup.sh:/backup.sh:ro
    command: ["/bin/sh", "-c", "while true; do sleep 86400; /backup.sh; done"]
    networks:
      - orthanc-network
    restart: unless-stopped

networks:
  orthanc-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  orthanc_data:
    driver: local
  backup_data:
    driver: local
  certbot_www:
    driver: local
  certbot_conf:
    driver: local